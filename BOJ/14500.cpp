//https://www.acmicpc.net/problem/14500
/*풀이 : 가능한 모든 블럭을 만들어 놓는다.
그리고 그 블럭과 매칭이 되는 숫자들을 더한다.
하지만..dfs를 이용하면 ㅗ를 빼고 모든 블럭을 만들 수 있다.
나중에 블럭을 구성하는 수가 더 많아지면
이번처럼 모든 가능한 블럭을 구하긴 어렵겠지..*/
#include <iostream>
#include <algorithm>

using namespace std;

int block[19][4][4] = {
{1,1,1,1,
0,0,0,0,
0,0,0,0,
0,0,0,0},

{1,0,0,0,
1,0,0,0,
1,0,0,0,
1,0,0,0 },

{ 1,1,0,0,
1,1,0,0,
0,0,0,0,
0,0,0,0 },

{ 1,0,0,0,
1,0,0,0,
1,1,0,0,
0,0,0,0 },

{ 1,1,1,0,
1,0,0,0,
0,0,0,0,
0,0,0,0 },

{ 1,1,0,0,
0,1,0,0,
0,1,0,0,
0,0,0,0 },

{ 0,0,1,0,
1,1,1,0,
0,0,0,0,
0,0,0,0 },

{1,0,0,0,
1,1,0,0,
0,1,0,0,
0,0,0,0 },

{ 0,1,1,0,
1,1,0,0,
0,0,0,0,
0,0,0,0 },

{ 0,1,0,0,
0,1,0,0,
1,1,0,0,
0,0,0,0 },

{1,0,0,0,
1,1,1,0,
0,0,0,0,
0,0,0,0 },

{1,1,0,0,
1,0,0,0,
1,0,0,0,
0,0,0,0},

{1,1,1,0,
0,0,1,0,
0,0,0,0,
0,0,0,0 },

{0,1,0,0,
1,1,0,0,
1,0,0,0,
0,0,0,0},

{1,1,0,0,
0,1,1,0,
0,0,0,0,
0,0,0,0 },

{1,1,1,0,
0,1,0,0,
0,0,0,0,
0,0,0,0 },

{0,1,0,0,
1,1,0,0,
0,1,0,0,
0,0,0,0 },

{0,1,0,0,
1,1,1,0,
0,0,0,0,
0,0,0,0 },

{1,0,0,0,
1,1,0,0,
1,0,0,0,
0,0,0,0}
};

int arr[503][503];
int n, m;

int fun(int num,int x,int y)
{
	int rett = 0;
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 4; j++)
		{
			if (arr[i + x][j + y] != -1e9)
			{
				rett += (block[num][i][j] * arr[i + x][j + y]);
			}
		}
	}
	return rett;
}
int main()
{
	ios_base::sync_with_stdio(0);
	
	cin >> n >> m;

	for (int i = 0; i < n+3; i++)
	{
		for (int j = 0; j < m+3; j++)
		{
			arr[i][j] = -1e9;
		}
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			cin >> arr[i][j];
		}
	}
	int res = 0;
	for (int i = 0; i < 19; i++)
	{
		for (int r = 0; r < n; r++)
		{
			for (int k = 0; k < m; k++)
			{
				res = max(res, fun(i,r,k));
			}
		}
	}
	cout << res;
	return 0;
}

